{"version":3,"sources":["Components/TodoForm.js","Components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodos","useState","todoString","setTodoString","Form","onSubmit","e","preventDefault","alert","todo","id","v4","FormGroup","InputGroup","Input","type","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","Todo","todos","markComplete","ListGroup","className","map","ListGroupItem","onClick","App","setTodos","useEffect","localTodos","localStorage","getItem","console","log","JSON","parse","a","setItem","stringify","Container","fluid","Todos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAqDeA,EAzCE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACOC,mBAAS,IADhB,mBACtBC,EADsB,KACVC,EADU,KAgB7B,OACI,cAACC,EAAA,EAAD,CAAMC,SAdW,SAAAC,GAEjB,GADAA,EAAEC,iBACgB,KAAfL,EACC,OAAOM,MAAM,2BAEjB,IAAMC,EAAO,CACTP,aACAQ,GAAIC,eAERX,EAASS,GACTN,EAAc,KAId,SACI,cAACS,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACAC,KAAK,OACLC,KAAK,OACLN,GAAG,OACHO,YAAY,sBACZC,MAAOhB,EACPiB,SAAU,SAAAb,GAAC,OAAIH,EAAcG,EAAEc,OAAOF,UAEtC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACI,cAACC,EAAA,EAAD,CACAC,MAAM,UADN,gC,wBCnBTC,EAfF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aAClB,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACKH,EAAMI,KAAI,SAAArB,GAAI,OACX,eAACsB,EAAA,EAAD,WACKtB,EAAKP,WACN,sBAAM2B,UAAU,cAAcG,QAAS,kBAAML,EAAalB,EAAKC,KAA/D,SACI,cAAC,IAAD,QAHYD,EAAKC,UC0B1BuB,MA9Bf,WAAgB,IAAD,EACehC,mBAAS,IADxB,mBACJyB,EADI,KACGQ,EADH,KAEXC,qBAAU,WACN,IAAMC,EAAaC,aAAaC,QAAQ,SACxCC,QAAQC,IAAI,CAACH,4BACVD,GACCF,EAASO,KAAKC,MAAMN,MAEzB,IAEH,IAAMpC,EAAQ,uCAAG,WAAMS,GAAN,SAAAkC,EAAA,sDACbT,EAAS,GAAD,mBAAKR,GAAL,CAAYjB,KADP,2CAAH,sDAWhB,OARE0B,qBAAU,WACNE,aAAaO,QAAQ,QAASH,KAAKI,UAAUnB,MAC9C,CAACA,IAOJ,eAACoB,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAAC,EAAD,CAAU/C,SAAUA,IACpB,cAACgD,EAAD,CAAOtB,MAAOA,EAAOC,aAPJ,SAAAjB,GACjBwB,EAASR,EAAMuB,QAAO,SAAAxC,GAAI,OAAIA,EAAKC,KAAOA,aCbnCwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df9194d1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Button,\r\n    Form,\r\n    Container\r\n} from 'reactstrap'\r\nimport {v4} from 'uuid'\r\n\r\nconst TodoForm = ({addTodos}) => {\r\n    const [todoString, setTodoString] = useState(\"\")\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(todoString === \"\"){\r\n            return alert(\"Please Enter todo Value\");\r\n        }\r\n        const todo = {\r\n            todoString,\r\n            id: v4(),\r\n        }\r\n        addTodos(todo); \r\n        setTodoString(\"\");\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <InputGroup>\r\n                    <Input\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    id=\"todo\"\r\n                    placeholder=\"Enter a Todo String\"\r\n                    value={todoString}\r\n                    onChange={e => setTodoString(e.target.value)}\r\n                    />\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <Button\r\n                        color=\"success\">\r\n                            Add Todo\r\n                        </Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoForm;","import React from 'react'\r\nimport { \r\n    ListGroup,\r\n    ListGroupItem\r\n} from 'reactstrap'\r\nimport {FaCheckDouble} from 'react-icons/fa'\r\n\r\nconst Todo = ({todos, markComplete}) => {\r\n    return (\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n            {todos.map(todo => (\r\n                <ListGroupItem key={todo.id}>\r\n                    {todo.todoString}\r\n                    <span className=\"float-right\" onClick={() => markComplete(todo.id)}>\r\n                        <FaCheckDouble/>\r\n                    </span>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Todo","import React, {useState, useEffect} from 'react'\nimport {Container} from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport TodoForm from './Components/TodoForm';\nimport Todos from './Components/Todos';\n\nfunction App() {\n    const [todos, setTodos] = useState([])\n    useEffect(() => {\n        const localTodos = localStorage.getItem(\"todos\")\n        console.log({localStorage});\n        if(localTodos){\n            setTodos(JSON.parse(localTodos))\n        }\n    }, [])\n\n    const addTodos = async todo => {\n        setTodos([...todos, todo])\n    }\n    useEffect(() =>{\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }, [todos])\n\n    const markComplete = id => {\n        setTodos(todos.filter(todo => todo.id !== id));\n    }\n\n  return (\n    <Container fluid>\n        <TodoForm addTodos={addTodos}/>\n        <Todos todos={todos} markComplete={markComplete}/>\n        \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}